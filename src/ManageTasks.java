
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mpaze
 */
public class ManageTasks extends javax.swing.JFrame {

    /**
     * Creates new form ManageTasks
     */
    public ManageTasks() {
        initComponents();
        populateEmployeeComboBox();
        populateEmployeeComboBox2();
        addTaskDetailsToScrollPane(jScrollPane1);
        addTaskDetailsToScrollPane(jScrollPane2);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jComboBox1 = new javax.swing.JComboBox();
        download = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        viewreport_label = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jComboBox2 = new javax.swing.JComboBox();
        upload = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        viewreport_label1 = new javax.swing.JLabel();
        menuBar1 = new javax.swing.JMenuBar();
        menu1 = new javax.swing.JMenu();
        home = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        employees1 = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        upload_tasks1 = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        manage_tasks1 = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        register_workers1 = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JPopupMenu.Separator();
        help1 = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        logout1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        title1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MANAGE TASKS");
        setResizable(false);

        jTabbedPane1.setBackground(new java.awt.Color(102, 102, 255));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1800, 950));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jPanel2.setBackground(new java.awt.Color(219, 239, 239));

        jComboBox1.setFont(new java.awt.Font("Verdana Pro", 0, 18)); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        download.setFont(new java.awt.Font("Verdana Pro", 0, 20)); // NOI18N
        download.setText("Download");
        download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Verdana Pro", 0, 20)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 988, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 239, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(download, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(download, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        viewreport_label.setFont(new java.awt.Font("Verdana Pro Cond Semibold", 0, 36)); // NOI18N
        viewreport_label.setText("MANAGE TASKS");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(809, 809, 809)
                        .addComponent(viewreport_label))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(viewreport_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        jTabbedPane1.addTab("Download - Delete Tasks", jPanel3);

        jPanel4.setBackground(new java.awt.Color(231, 231, 231));

        jPanel5.setBackground(new java.awt.Color(255, 255, 204));

        jScrollPane2.setBackground(new java.awt.Color(240, 255, 216));

        jComboBox2.setFont(new java.awt.Font("Verdana Pro", 0, 18)); // NOI18N
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        upload.setFont(new java.awt.Font("Verdana Pro", 0, 20)); // NOI18N
        upload.setText("Upload");
        upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Verdana Pro", 0, 18)); // NOI18N
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 988, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(upload, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(49, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upload, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        viewreport_label1.setFont(new java.awt.Font("Verdana Pro Cond Semibold", 0, 36)); // NOI18N
        viewreport_label1.setText("WRITE REPORT");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(803, Short.MAX_VALUE)
                .addComponent(viewreport_label1)
                .addGap(754, 754, 754))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(viewreport_label1)
                .addGap(40, 40, 40)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Write Report", jPanel4);

        menuBar1.setForeground(new java.awt.Color(245, 219, 165));
        menuBar1.setToolTipText("");
        menuBar1.setFont(new java.awt.Font("Verdana Pro Cond Black", 0, 20)); // NOI18N
        menuBar1.setPreferredSize(new java.awt.Dimension(65, 50));

        menu1.setText(" MENU");
        menu1.setFont(new java.awt.Font("Verdana Pro Cond Semibold", 0, 26)); // NOI18N

        home.setFont(new java.awt.Font("Verdana Pro", 0, 16)); // NOI18N
        home.setText("HOME");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        menu1.add(home);
        menu1.add(jSeparator6);

        employees1.setFont(new java.awt.Font("Verdana Pro", 0, 16)); // NOI18N
        employees1.setText("EMPLOYEES");
        employees1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employees1ActionPerformed(evt);
            }
        });
        menu1.add(employees1);
        menu1.add(jSeparator7);

        upload_tasks1.setFont(new java.awt.Font("Verdana Pro", 0, 16)); // NOI18N
        upload_tasks1.setText("UPLOAD TASKS");
        upload_tasks1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upload_tasks1ActionPerformed(evt);
            }
        });
        menu1.add(upload_tasks1);
        menu1.add(jSeparator9);

        manage_tasks1.setFont(new java.awt.Font("Verdana Pro", 0, 16)); // NOI18N
        manage_tasks1.setText("MANAGE TASKS");
        manage_tasks1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manage_tasks1ActionPerformed(evt);
            }
        });
        menu1.add(manage_tasks1);
        menu1.add(jSeparator10);

        register_workers1.setFont(new java.awt.Font("Verdana Pro", 0, 16)); // NOI18N
        register_workers1.setText("REGISTER WORKERS");
        register_workers1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                register_workers1ActionPerformed(evt);
            }
        });
        menu1.add(register_workers1);
        menu1.add(jSeparator11);

        help1.setFont(new java.awt.Font("Verdana Pro", 0, 16)); // NOI18N
        help1.setText("HELP");
        help1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help1ActionPerformed(evt);
            }
        });
        menu1.add(help1);
        menu1.add(jSeparator8);

        logout1.setFont(new java.awt.Font("Verdana Pro", 0, 16)); // NOI18N
        logout1.setText("LOGOUT");
        logout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout1ActionPerformed(evt);
            }
        });
        menu1.add(logout1);

        menuBar1.add(menu1);

        jMenu2.setText("                                                                                                                                                                                                                                          ");
        jMenu2.setEnabled(false);
        menuBar1.add(jMenu2);

        title1.setText("SKY CODE");
        title1.setFont(new java.awt.Font("Verdana Pro Semibold", 0, 48)); // NOI18N
        menuBar1.add(title1);

        setJMenuBar(menuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        AdminHomePage adminhomepage = new AdminHomePage();

        adminhomepage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_homeActionPerformed

    private void employees1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employees1ActionPerformed
        Employees empolyees = new Employees();

        empolyees.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_employees1ActionPerformed

    private void upload_tasks1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upload_tasks1ActionPerformed
        UploadTasks uploadtasks = new UploadTasks();

        this.setVisible(false);
        uploadtasks.setVisible(true);
    }//GEN-LAST:event_upload_tasks1ActionPerformed

    private void manage_tasks1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manage_tasks1ActionPerformed

        ManageTasks managetasks = new ManageTasks();

        managetasks.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_manage_tasks1ActionPerformed

    private void register_workers1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_register_workers1ActionPerformed

        Register register = new Register();
        
        this.setVisible(false);
        register.setVisible(true);   
    }//GEN-LAST:event_register_workers1ActionPerformed

    private void help1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_help1ActionPerformed

        HelpAdmin helpadmin = new HelpAdmin();
        
        helpadmin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_help1ActionPerformed

    private void logout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout1ActionPerformed
        Main main = new Main();

       
        main.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_logout1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    
    
    private final String uploadsFolderPath = "C:\\Users\\mpaze\\OneDrive\\Έγγραφα\\NetBeansProjects\\Myapp\\uploads"; // Path to the uploads folder

    
     
    private void downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadActionPerformed
        
        openFileForSelectedTask();

    }//GEN-LAST:event_downloadActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed

        
    // Button action to delete a task
    String selectedItem = (String) jComboBox1.getSelectedItem();
    if (selectedItem != null) {
        String selectedId = selectedItem.split(" - ")[0];
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this task?", "Delete Task", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try (Connection conn = DatabaseHelper.connect()) {
                String sql = "DELETE FROM tasks WHERE user_id = ?";
                try (PreparedStatement statement = conn.prepareStatement(sql)) {
                    statement.setString(1, selectedId);
                    int rowsDeleted = statement.executeUpdate();
                    if (rowsDeleted > 0) {
                        JOptionPane.showMessageDialog(this, "Task deleted successfully.");
                        // Refresh the task list and JComboBox after deletion
                        populateEmployeeComboBox();
                        addTaskDetailsToScrollPane(jScrollPane1);
                    } else {
                        JOptionPane.showMessageDialog(this, "Error: Task not found.");
                    }
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error deleting task!");
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "No task selected!");
    }

    }//GEN-LAST:event_deleteActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadActionPerformed
     
    // Uploading athe report 
        
    String selectedItem = (String) jComboBox2.getSelectedItem();
    
    if (selectedItem != null) {
        String[] parts = selectedItem.split(" - "); // Spliting the formatiom of the JComboBox
        int userId = Integer.parseInt(parts[0]); 
        String report = jTextArea2.getText();

        try (Connection conn = DatabaseHelper.connect()) {
            String sql = "UPDATE tasks SET report_text = ? WHERE user_id = ?";
            try (PreparedStatement statement = conn.prepareStatement(sql)) {
                statement.setString(1, report);
                statement.setInt(2, userId);

                int rowsUpdated = statement.executeUpdate();
                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(this, "Report updated successfully!");
                    
                    // Refresh the JScrollPane to display updated report text
                    addTaskDetailsToScrollPane(jScrollPane2);
                    addTaskDetailsToScrollPane(jScrollPane1);

                } else {
                    JOptionPane.showMessageDialog(this, "No task found for the selected user.");
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error updating report in database.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a task.");
    }

        

    }//GEN-LAST:event_uploadActionPerformed
    
     // Method to populate JComboBox with employee details
    private void populateEmployeeComboBox() {
        try (Connection conn = DatabaseHelper.connect()) {
             String sql = "SELECT r.id, r.name, r.lastname, t.taskname " +
                     "FROM register r " +
                     "JOIN tasks t ON r.id = t.user_id";            
         try (PreparedStatement statement = conn.prepareStatement(sql);
                 ResultSet resultSet = statement.executeQuery()) {
                while (resultSet.next()) {
                    int id = resultSet.getInt("id");
                    String name = resultSet.getString("name");
                    String lastName = resultSet.getString("lastname");
                    String task = resultSet.getString("taskname");

                    // Add formatted string to JComboBox
                    jComboBox1.addItem(id + " - " + name + " " + lastName + " - " + task);
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
   
    
    // Method to retrieve the file path for the selected task
    private void openFileForSelectedTask() {
        String selectedItem = (String) jComboBox1.getSelectedItem();
        if (selectedItem != null) {
            String selectedId = selectedItem.split(" - ")[0];

            try (Connection conn = DatabaseHelper.connect()) {
                String sql = "SELECT file_path FROM tasks WHERE user_id = ?"; 
                try (PreparedStatement statement = conn.prepareStatement(sql)) {
                    statement.setString(1, selectedId);
                    ResultSet resultSet = statement.executeQuery();

                    if (resultSet.next()) {
                        String filePath = resultSet.getString("file_path");
                        openFile(filePath); // Open the file
                    } else {
                        JOptionPane.showMessageDialog(this, "Error: No file associated with this task.");
                    }
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error retrieving file path!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No task selected!");
        }
    }

    // Method to open a file
    private void openFile(String fileName) {
        try {
            if (!fileName.startsWith(uploadsFolderPath)) {
                fileName = uploadsFolderPath + File.separator + fileName; 
            }

            File file = new File(fileName);
            if (file.exists()) {
                Desktop.getDesktop().open(file);
                JOptionPane.showMessageDialog(this, "File opened successfully.");
            } else {
                JOptionPane.showMessageDialog(this, "File not found: " + fileName, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to open file: " + fileName, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
 
        
      private ResultSet getTaskDetails() {
    try {
        Connection conn = DatabaseHelper.connect();
        String sql = "SELECT tasks.*, register.name FROM tasks JOIN register ON tasks.user_id = register.id";
        PreparedStatement statement = conn.prepareStatement(sql);
        return statement.executeQuery();
    } catch (SQLException ex) {
        ex.printStackTrace();
        return null;
    }
}

   // Formation of task deatils
    private void addTaskDetailsToScrollPane(JScrollPane scrollPane) {
        
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        Font customFont = new Font("Verdana pro", Font.PLAIN, 18);

    try {
        ResultSet resultSet = getTaskDetails();
        if (resultSet != null) {
            while (resultSet.next()) {
                String taskName = resultSet.getString("taskname");
                String taskDescription = resultSet.getString("task_description");
                String userName = resultSet.getString("name");
                String deadline = resultSet.getString("deadline_date");
                String fileName = resultSet.getString("file_path");
                String reportText = resultSet.getString("report_text"); 

                JPanel taskPanel = new JPanel();
                taskPanel.setLayout(new BoxLayout(taskPanel, BoxLayout.Y_AXIS));
                taskPanel.setBackground(Color.WHITE);
                taskPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

                JLabel taskLabel = new JLabel("Task: " + taskName);
                taskLabel.setFont(customFont);

                JLabel descriptionLabel = new JLabel("Description: " + taskDescription);
                descriptionLabel.setFont(customFont);

                JLabel userLabel = new JLabel("Assigned to: " + userName);
                userLabel.setFont(customFont);

                JLabel deadlineLabel = new JLabel("Deadline: " + deadline);
                deadlineLabel.setFont(customFont);
                
                JLabel filepath1 = new JLabel("File path to: " + fileName);
                filepath1.setFont(customFont);

                JLabel report1 = new JLabel("Report: " + reportText);
                report1.setFont(customFont);
                
                taskPanel.add(taskLabel);
                taskPanel.add(descriptionLabel);
                taskPanel.add(userLabel);
                taskPanel.add(deadlineLabel);
                taskPanel.add(filepath1);
                taskPanel.add(report1);

                panel.add(taskPanel);

                panel.add(Box.createRigidArea(new Dimension(0, 10))); // 10 pixels vertical gap
            }
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    }

    panel.setBackground(Color.WHITE);

    scrollPane.setViewportView(panel);
}
    
    
  // Adding info to the JcomboBox method
  private void populateEmployeeComboBox2() {
    try (Connection conn = DatabaseHelper.connect()) {
        String sql = "SELECT r.id, r.name, r.lastname, t.taskname " +
                     "FROM register r " +
                     "JOIN tasks t ON r.id = t.user_id";            
        try (PreparedStatement statement = conn.prepareStatement(sql);
             ResultSet resultSet = statement.executeQuery()) {
            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String name = resultSet.getString("name");
                String lastName = resultSet.getString("lastname");
                String task = resultSet.getString("taskname");

                // Add formatted string to JComboBox
                jComboBox2.addItem(id + " - " + name + " " + lastName + " - " + task);
            }
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
}
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageTasks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JButton download;
    private javax.swing.JMenuItem employees1;
    private javax.swing.JMenuItem help1;
    private javax.swing.JMenuItem home;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator11;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JMenuItem logout1;
    private javax.swing.JMenuItem manage_tasks1;
    private javax.swing.JMenu menu1;
    private javax.swing.JMenuBar menuBar1;
    private javax.swing.JMenuItem register_workers1;
    private javax.swing.JMenu title1;
    private javax.swing.JButton upload;
    private javax.swing.JMenuItem upload_tasks1;
    private javax.swing.JLabel viewreport_label;
    private javax.swing.JLabel viewreport_label1;
    // End of variables declaration//GEN-END:variables
}
